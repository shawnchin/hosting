/* qwil-api-transport version 0.1.0 built Thu, 23 May 2024 08:42:40 GMT */
!function(e,s){"object"==typeof exports&&"object"==typeof module?module.exports=s():"function"==typeof define&&define.amd?define([],s):"object"==typeof exports?exports.QwilApiTransport=s():e.QwilApiTransport=s()}(this,(()=>(()=>{var e={422:e=>{e.exports=function(e){var s,t=e.scope,r=e.window,n=e.windowForEventListening||window,o={},a=[],d={},i=!1,l="__ready__",p=function(e){var s;try{s=JSON.parse(e.data)}catch(e){return}if(s.postis&&s.scope===t){var r=o[s.method];if(r)for(var n=0;n<r.length;n++)r[n].call(null,s.params);else d[s.method]=d[s.method]||[],d[s.method].push(s.params)}};n.addEventListener("message",p,!1);var c={listen:function(e,s){o[e]=o[e]||[],o[e].push(s);var t=d[e];if(t)for(var r=o[e],n=0;n<r.length;n++)for(var a=0;a<t.length;a++)r[n].call(null,t[a]);delete d[e]},send:function(e){var s=e.method;(i||e.method===l)&&r&&"function"==typeof r.postMessage?r.postMessage(JSON.stringify({postis:!0,scope:t,method:s,params:e.params}),"*"):a.push(e)},ready:function(e){i?e():setTimeout((function(){c.ready(e)}),50)},destroy:function(e){clearInterval(s),i=!1,n&&"function"==typeof n.removeEventListener&&n.removeEventListener("message",p),e&&e()}},h=+new Date+Math.random()+"";return s=setInterval((function(){c.send({method:l,params:h})}),50),c.listen(l,(function(e){if(e===h){clearInterval(s),i=!0;for(var t=0;t<a.length;t++)c.send(a[t]);a=[]}else c.send({method:l,params:e})})),c}}},s={};function t(r){var n=s[r];if(void 0!==n)return n.exports;var o=s[r]={exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var s=e&&e.__esModule?()=>e.default:()=>e;return t.d(s,{a:s}),s},t.d=(e,s)=>{for(var r in s)t.o(s,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:s[r]})},t.o=(e,s)=>Object.prototype.hasOwnProperty.call(e,s);var r={};return(()=>{"use strict";t.d(r,{default:()=>i});var e=t(422),s=t.n(e);class n{constructor(e){const{scope:t,window:r}=e;this.postis=s()({scope:t,window:r}),this._handleMessage=e=>{console.error("Unhandled incoming message",e)},this.postis.listen("api",(e=>this._handleMessage(e)))}send(e){this.postis.send({method:"api",params:e})}setMessageHandler(e){this._handleMessage=e}destroy(){this.postis.destroy()}}const o="event",a="request",d="response";class i{constructor({scope:e,window:s,eventHandler:t,requestHandler:r}={}){this._reqId=0,this._responseHandlers=new Map,this._eventHandler=t,this._requestHandler=r,this._backend=new n({scope:e,window:s}),this._backend.setMessageHandler(this._onMessageReceived.bind(this))}sendEvent(e,s){this._backend.send({type:o,data:{event:e,payload:s}})}sendRequest(e,s){const t=this._reqId++;return new Promise(((r,n)=>{this._responseHandlers.set(t,(({error:e,result:s})=>{void 0!==s?r(s):n(void 0!==e?e:new Error(`Unexpected response format for ${t}`))}));try{this._backend.send({type:a,data:{id:t,request:e,payload:s}})}catch(e){this._responseHandlers.delete(t),n(e)}}))}_onMessageReceived(e){const{type:s,data:t}=e;if(s===o){const{event:s,payload:r}=t;s?this._eventHandler({event:s,payload:r}):console.error("Received message with unknown format",e)}else if(s===a){const{id:e,request:s,payload:r}=t,n=this._requestHandler;n&&n({request:s,payload:r,onComplete:({result:s,error:t})=>{this._backend.send({type:d,data:{id:e,result:s,error:t}})}})}else if(s===d){const{id:e,error:s,result:r}=t,n=this._responseHandlers.get(e);n?(n({error:s,result:r}),this._responseHandlers.delete(e)):console.error(`Unexpected response id ${e}`)}else console.error(`Received message with invalid type ${s}`)}destroy(){this._backend.destroy()}}})(),r.default})()));